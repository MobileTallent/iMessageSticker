//
//  MessagesViewController.m
//  MessagesExtension
//
//  Created by Rainbow on 10/20/16.
//  Copyright Â© 2016 apple. All rights reserved.
//

#import "MessagesViewController.h"
#import "CollectionViewCell.h"



@interface MessagesViewController() {
    NSArray* stickerArray;
    int categoryInt;
}

@end

@implementation MessagesViewController

- (void)viewDidLoad {
    
    [super viewDidLoad];
    //get the total Pictures
    NSString* path = [[NSBundle mainBundle] pathForResource:@"utilitylist" ofType:@"plist"];
    NSArray* array = [[NSArray alloc] initWithContentsOfFile:path];
    stickerArray = [array valueForKey:@"Pictures"];
    // Do any additional setup after loading the view.
    
}

#pragma mark -
#pragma mark - UICollectionViewDataSource

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {
    
    NSArray * stickers = [stickerArray objectAtIndex:categoryInt];

        return stickers.count;
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath{
    
        static NSString *identifier = @"Cell";
        CollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:identifier forIndexPath:indexPath];
        NSArray* pictures = [stickerArray objectAtIndex:categoryInt];
        NSURL *urlForSticker = [[NSBundle mainBundle] URLForResource:[pictures objectAtIndex:indexPath.row] withExtension:@"png"];
        cell.stickerView.sticker = [[MSSticker alloc] initWithContentsOfFileURL:urlForSticker localizedDescription:@"" error:nil];
        return cell;
        
}
#pragma mark -
#pragma mark - UICollectionViewFlowLayout

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath
{
    
        CGFloat picDimension = self.view.frame.size.width / 4.0f;
        return CGSizeMake(picDimension, picDimension);
}

- (UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout insetForSectionAtIndex:(NSInteger)section
{
    CGFloat leftRightInset = self.view.frame.size.width / 14.0f;
    return UIEdgeInsetsMake(0, leftRightInset, 0, leftRightInset);
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Conversation Handling

-(void)didBecomeActiveWithConversation:(MSConversation *)conversation {
    // Called when the extension is about to move from the inactive to active state.
    // This will happen when the extension is about to present UI.
    
    // Use this method to configure the extension and restore previously stored state.
}

-(void)willResignActiveWithConversation:(MSConversation *)conversation {
    // Called when the extension is about to move from the active to inactive state.
    // This will happen when the user dissmises the extension, changes to a different
    // conversation or quits Messages.
    
    // Use this method to release shared resources, save user data, invalidate timers,
    // and store enough state information to restore your extension to its current state
    // in case it is terminated later.
}

-(void)didReceiveMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when a message arrives that was generated by another instance of this
    // extension on a remote device.
    
    // Use this method to trigger UI updates in response to the message.
}

-(void)didStartSendingMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when the user taps the send button.
}

-(void)didCancelSendingMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when the user deletes the message without sending it.
    
    // Use this to clean up state related to the deleted message.
}

-(void)willTransitionToPresentationStyle:(MSMessagesAppPresentationStyle)presentationStyle {
    // Called before the extension transitions to a new presentation style.
    
    // Use this method to prepare for the change in presentation style.
}

-(void)didTransitionToPresentationStyle:(MSMessagesAppPresentationStyle)presentationStyle {
    [self.collectionView reloadData];
    // Called after the extension transitions to a new presentation style.
    
    // Use this method to finalize any behaviors associated with the change in presentation style.
}

@end
